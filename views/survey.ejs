<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>Word Association Survey</title>
  <link rel="stylesheet" type="text/css" href="/css/bootstrap.min.css" />
  <style>
    .textshadow { text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000; font-size: 64px; font-weight: bold; }
  </style>
</head>
<body class="container py-4">
  <div class="row justify-content-center">
    <div class="col-lg-8 text-center">
      <h3 class="mb-1">Welcome, <%= username %></h3>
      <p class="text-muted mb-4"><strong>Mode:</strong> <%= surveyModeText %> â€” <%= instructions %></p>

      <div id="panel" class="border rounded p-5">
        <div id="word" class="textshadow" style="visibility:hidden">READY?</div>
        <div class="mt-4">
          <button id="btnStart" class="btn btn-primary">Start</button>
        </div>
        <div class="mt-3 text-muted">Round <span id="roundIdx">0</span> / <%= numRounds %></div>
      </div>

      <form id="formForTimings" action="/timings" method="post" class="d-none">
        <input type="hidden" id="timing" name="timing" value="">
        <input type="hidden" id="timingType" name="timingType" value="<%= surveyMode %>">
      </form>
    </div>
  </div>

  <!-- Server data as JSON (avoids EJS-in-JS lint errors) -->
  <script id="boot" type="application/json">
    <%- JSON.stringify({ words: words, colors: colors, indices: indices, mode: surveyMode }) %>
  </script>

<script>
(() => {
  // Read data from the JSON blob
  const bootEl = document.getElementById('boot');
  if (!bootEl) { console.error('boot JSON missing'); return; }
  const { words: WORDS = [], colors: COLORS = [], indices = [], mode = 0 } =
    JSON.parse(bootEl.textContent || '{}');

  const wordEl = document.getElementById('word');
  const btnStart = document.getElementById('btnStart');
  const roundIdxEl = document.getElementById('roundIdx');
  const form = document.getElementById('formForTimings');
  const timingInput = document.getElementById('timing');

  function showRound(i) {
    roundIdxEl.textContent = String(i + 1);
    const idxText = indices[i];
    const idxColor = indices[(i + 3) % indices.length]; // mismatch to avoid Stroop cheat
    wordEl.style.visibility = 'visible';
    wordEl.textContent = WORDS[idxText];
    wordEl.style.color = COLORS[idxColor];
  }

  btnStart.addEventListener('click', () => {
    btnStart.disabled = true;
    wordEl.style.visibility = 'hidden';

    const t0 = performance.now();
    let i = -1;

    // use recursive setTimeout (more reliable than setInterval for our end-submit)
    function tick() {
      i++;
      if (i >= indices.length) {
        const total = Math.round(performance.now() - t0);
        console.log('Submitting /timings', total);
        timingInput.value = String(total);
        form.submit();
        return;
      }
      showRound(i);
      setTimeout(tick, 700);
    }

    setTimeout(tick, 400); // small initial delay before first word
  });
})();
</script>


